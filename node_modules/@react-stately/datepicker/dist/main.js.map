{"mappings":"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","sources":["packages/@react-stately/datepicker/src/index.ts","packages/@react-stately/datepicker/src/useDatePickerState.ts","packages/@react-stately/datepicker/src/utils.ts","packages/@react-stately/datepicker/src/useDateFieldState.ts","packages/@react-stately/datepicker/src/placeholders.ts","packages/@react-stately/datepicker/src/useDateRangePickerState.ts","packages/@react-stately/datepicker/src/useTimeFieldState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useDatePickerState} from './useDatePickerState';\nexport {useDateFieldState} from './useDateFieldState';\nexport {useDateRangePickerState} from './useDateRangePickerState';\nexport {useTimeFieldState} from './useTimeFieldState';\n\nexport type {DateFieldStateOptions, DateFieldState, DateSegment, SegmentType} from './useDateFieldState';\nexport type {DatePickerStateOptions, DatePickerState} from './useDatePickerState';\nexport type {DateRangePickerStateOptions, DateRangePickerState} from './useDateRangePickerState';\nexport type {TimeFieldStateOptions} from './useTimeFieldState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, DateFormatter, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DatePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {FieldOptions, getFormatOptions, getPlaceholderTime, useDefaultProps} from './utils';\nimport {isInvalid} from './utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface DatePickerStateOptions extends DatePickerProps<DateValue> {\n  /**\n   * Determines whether the date picker popover should close automatically when a date is selected.\n   * @default true\n   */\n  shouldCloseOnSelect?: boolean | (() => boolean)\n}\n\nexport interface DatePickerState {\n  /** The currently selected date. */\n  value: DateValue,\n  /** Sets the selected date. */\n  setValue(value: DateValue): void,\n  /**\n   * The date portion of the value. This may be set prior to `value` if the user has\n   * selected a date but has not yet selected a time.\n   */\n  dateValue: DateValue,\n  /** Sets the date portion of the value. */\n  setDateValue(value: CalendarDate): void,\n  /**\n   * The time portion of the value. This may be set prior to `value` if the user has\n   * selected a time but has not yet selected a date.\n   */\n  timeValue: TimeValue,\n  /** Sets the time portion of the value. */\n  setTimeValue(value: TimeValue): void,\n  /** The granularity for the field, based on the `granularity` prop and current value. */\n  granularity: Granularity,\n  /** Whether the date picker supports selecting a time, according to the `granularity` prop and current value. */\n  hasTime: boolean,\n  /** Whether the calendar popover is currently open. */\n  isOpen: boolean,\n  /** Sets whether the calendar popover is open. */\n  setOpen(isOpen: boolean): void,\n  /** The current validation state of the date picker, based on the `validationState`, `minValue`, and `maxValue` props. */\n  validationState: ValidationState,\n  /** Formats the selected value using the given options. */\n  formatValue(locale: string, fieldOptions: FieldOptions): string\n}\n\n/**\n * Provides state management for a date picker component.\n * A date picker combines a DateField and a Calendar popover to allow users to enter or select a date and time value.\n */\nexport function useDatePickerState(props: DatePickerStateOptions): DatePickerState {\n  let overlayState = useOverlayTriggerState(props);\n  let [value, setValue] = useControlledState<DateValue>(props.value, props.defaultValue || null, props.onChange);\n\n  let v = (value || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let dateValue = value != null ? value.toDate(defaultTimeZone ?? 'UTC') : null;\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second' || granularity === 'millisecond';\n  let shouldCloseOnSelect = props.shouldCloseOnSelect ?? true;\n\n  let [selectedDate, setSelectedDate] = useState<DateValue>(null);\n  let [selectedTime, setSelectedTime] = useState<TimeValue>(null);\n\n  if (value) {\n    selectedDate = value;\n    if ('hour' in value) {\n      selectedTime = value;\n    }\n  }\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let commitValue = (date: DateValue, time: TimeValue) => {\n    setValue('timeZone' in time ? time.set(toCalendarDate(date)) : toCalendarDateTime(date, time));\n  };\n\n  // Intercept setValue to make sure the Time section is not changed by date selection in Calendar\n  let selectDate = (newValue: CalendarDate) => {\n    let shouldClose = typeof shouldCloseOnSelect === 'function' ? shouldCloseOnSelect() : shouldCloseOnSelect;\n    if (hasTime) {\n      if (selectedTime || shouldClose) {\n        commitValue(newValue, selectedTime || getPlaceholderTime(props.placeholderValue));\n      } else {\n        setSelectedDate(newValue);\n      }\n    } else {\n      setValue(newValue);\n    }\n\n    if (shouldClose) {\n      overlayState.setOpen(false);\n    }\n  };\n\n  let selectTime = (newValue: TimeValue) => {\n    if (selectedDate) {\n      commitValue(selectedDate, newValue);\n    } else {\n      setSelectedTime(newValue);\n    }\n  };\n\n  let validationState: ValidationState = props.validationState ||\n    (isInvalid(value, props.minValue, props.maxValue) ? 'invalid' : null) ||\n    (value && props.isDateUnavailable?.(value) ? 'invalid' : null);\n\n  return {\n    value,\n    setValue,\n    dateValue: selectedDate,\n    timeValue: selectedTime,\n    setDateValue: selectDate,\n    setTimeValue: selectTime,\n    granularity,\n    hasTime,\n    isOpen: overlayState.isOpen,\n    setOpen(isOpen) {\n      // Commit the selected date when the calendar is closed. Use a placeholder time if one wasn't set.\n      // If only the time was set and not the date, don't commit. The state will be preserved until\n      // the user opens the popover again.\n      if (!isOpen && !value && selectedDate && hasTime) {\n        commitValue(selectedDate, selectedTime || getPlaceholderTime(props.placeholderValue));\n      }\n\n      overlayState.setOpen(isOpen);\n    },\n    validationState,\n    formatValue(locale, fieldOptions) {\n      if (!dateValue) {\n        return '';\n      }\n\n      let formatOptions = getFormatOptions(fieldOptions, {\n        granularity,\n        timeZone: defaultTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle,\n        showEra: value.calendar.identifier === 'gregory' && value.era === 'BC'\n      });\n\n      let formatter = new DateFormatter(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, now, Time, toCalendar, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DatePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {useRef} from 'react';\n\nexport function isInvalid(value: DateValue, minValue: DateValue, maxValue: DateValue) {\n  return value != null && (\n    (minValue != null && value.compare(minValue) < 0) ||\n    (maxValue != null && value.compare(maxValue) > 0)\n  );\n}\n\nexport type FieldOptions = Pick<Intl.DateTimeFormatOptions, 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second'>;\ninterface FormatterOptions {\n  timeZone?: string,\n  hideTimeZone?: boolean,\n  granularity?: DatePickerProps<any>['granularity'],\n  maxGranularity?: 'year' | 'month' | DatePickerProps<any>['granularity'],\n  hourCycle?: 12 | 24,\n  showEra?: boolean\n}\n\nconst DEFAULT_FIELD_OPTIONS: FieldOptions = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: '2-digit',\n  second: '2-digit'\n};\n\nexport function getFormatOptions(\n  fieldOptions: FieldOptions,\n  options: FormatterOptions\n): Intl.DateTimeFormatOptions {\n  fieldOptions = {...DEFAULT_FIELD_OPTIONS, ...fieldOptions};\n  let granularity = options.granularity || 'minute';\n  let keys = Object.keys(fieldOptions);\n  let startIdx = keys.indexOf(options.maxGranularity ?? 'year');\n  if (startIdx < 0) {\n    startIdx = 0;\n  }\n\n  let endIdx = keys.indexOf(granularity);\n  if (endIdx < 0) {\n    endIdx = 2;\n  }\n\n  if (startIdx > endIdx) {\n    throw new Error('maxGranularity must be greater than granularity');\n  }\n\n  let opts: Intl.DateTimeFormatOptions = keys.slice(startIdx, endIdx + 1).reduce((opts, key) => {\n    opts[key] = fieldOptions[key];\n    return opts;\n  }, {});\n\n  if (options.hourCycle != null) {\n    opts.hour12 = options.hourCycle === 12;\n  }\n\n  opts.timeZone = options.timeZone || 'UTC';\n\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second';\n  if (hasTime && options.timeZone && !options.hideTimeZone) {\n    opts.timeZoneName = 'short';\n  }\n\n  if (options.showEra && startIdx === 0) {\n    opts.era = 'short';\n  }\n\n  return opts;\n}\n\nexport function getPlaceholderTime(placeholderValue: DateValue): TimeValue {\n  if (placeholderValue && 'hour' in placeholderValue) {\n    return placeholderValue;\n  }\n\n  return new Time();\n}\n\nexport function convertValue(value: DateValue, calendar: Calendar): DateValue {\n  if (value === null) {\n    return null;\n  }\n\n  if (!value) {\n    return undefined;\n  }\n\n  return toCalendar(value, calendar);\n}\n\n\nexport function createPlaceholderDate(placeholderValue: DateValue, granularity: string, calendar: Calendar, timeZone: string) {\n  if (placeholderValue) {\n    return convertValue(placeholderValue, calendar);\n  }\n\n  let date = toCalendar(now(timeZone).set({\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  }), calendar);\n\n  if (granularity === 'year' || granularity === 'month' || granularity === 'day') {\n    return toCalendarDate(date);\n  }\n\n  if (!timeZone) {\n    return toCalendarDateTime(date);\n  }\n\n  return date;\n}\n\nexport function useDefaultProps(v: DateValue, granularity: Granularity): [Granularity, string] {\n  // Compute default granularity and time zone from the value. If the value becomes null, keep the last values.\n  let lastValue = useRef(v);\n  if (v) {\n    lastValue.current = v;\n  }\n\n  v = lastValue.current;\n  let defaultTimeZone = (v && 'timeZone' in v ? v.timeZone : undefined);\n  granularity = granularity || (v && 'minute' in v ? 'minute' : 'day');\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  return [granularity, defaultTimeZone];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Calendar, DateFormatter, getMinimumDayInMonth, getMinimumMonthInYear, GregorianCalendar, toCalendar} from '@internationalized/date';\nimport {convertValue, createPlaceholderDate, FieldOptions, getFormatOptions, isInvalid, useDefaultProps} from './utils';\nimport {DatePickerProps, DateValue, Granularity} from '@react-types/datepicker';\nimport {getPlaceholder} from './placeholders';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport type SegmentType = 'era' | 'year' | 'month' | 'day' |  'hour' | 'minute' | 'second' | 'dayPeriod' | 'literal' | 'timeZoneName';\nexport interface DateSegment {\n  /** The type of segment. */\n  type: SegmentType,\n  /** The formatted text for the segment. */\n  text: string,\n  /** The numeric value for the segment, if applicable. */\n  value?: number,\n  /** The minimum numeric value for the segment, if applicable. */\n  minValue?: number,\n  /** The maximum numeric value for the segment, if applicable. */\n  maxValue?: number,\n  /** Whether the value is a placeholder. */\n  isPlaceholder: boolean,\n  /** A placeholder string for the segment. */\n  placeholder: string,\n  /** Whether the segment is editable. */\n  isEditable: boolean\n}\n\nexport interface DateFieldState {\n  /** The current field value. */\n  value: DateValue,\n  /** The current value, converted to a native JavaScript `Date` object.  */\n  dateValue: Date,\n  /** The calendar system currently in use. */\n  calendar: Calendar,\n  /** Sets the field's value. */\n  setValue(value: DateValue): void,\n  /** A list of segments for the current value. */\n  segments: DateSegment[],\n  /** A date formatter configured for the current locale and format. */\n  dateFormatter: DateFormatter,\n  /** The current validation state of the date field, based on the `validationState`, `minValue`, and `maxValue` props. */\n  validationState: ValidationState,\n  /** The granularity for the field, based on the `granularity` prop and current value. */\n  granularity: Granularity,\n  /** The maximum date or time unit that is displayed in the field. */\n  maxGranularity: 'year' | 'month' | Granularity,\n  /** Whether the field is disabled. */\n  isDisabled: boolean,\n  /** Whether the field is read only. */\n  isReadOnly: boolean,\n  /** Whether the field is required. */\n  isRequired: boolean,\n  /** Increments the given segment. Upon reaching the minimum or maximum value, the value wraps around to the opposite limit. */\n  increment(type: SegmentType): void,\n  /** Decrements the given segment. Upon reaching the minimum or maximum value, the value wraps around to the opposite limit. */\n  decrement(type: SegmentType): void,\n  /**\n   * Increments the given segment by a larger amount, rounding it to the nearest increment.\n   * The amount to increment by depends on the field, for example 15 minutes, 7 days, and 5 years.\n   * Upon reaching the minimum or maximum value, the value wraps around to the opposite limit.\n   */\n  incrementPage(type: SegmentType): void,\n  /**\n   * Decrements the given segment by a larger amount, rounding it to the nearest increment.\n   * The amount to decrement by depends on the field, for example 15 minutes, 7 days, and 5 years.\n   * Upon reaching the minimum or maximum value, the value wraps around to the opposite limit.\n   */\n  decrementPage(type: SegmentType): void,\n  /** Sets the value of the given segment. */\n  setSegment(type: 'era', value: string): void,\n  setSegment(type: SegmentType, value: number): void,\n  /** Updates the remaining unfilled segments with the placeholder value. */\n  confirmPlaceholder(): void,\n  /** Clears the value of the given segment, reverting it to the placeholder. */\n  clearSegment(type: SegmentType): void,\n  /** Formats the current date value using the given options. */\n  formatValue(fieldOptions: FieldOptions): string\n}\n\nconst EDITABLE_SEGMENTS = {\n  year: true,\n  month: true,\n  day: true,\n  hour: true,\n  minute: true,\n  second: true,\n  dayPeriod: true,\n  era: true\n};\n\nconst PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15\n};\n\n// Node seems to convert everything to lowercase...\nconst TYPE_MAPPING = {\n  dayperiod: 'dayPeriod'\n};\n\nexport interface DateFieldStateOptions extends DatePickerProps<DateValue> {\n  /**\n   * The maximum unit to display in the date field.\n   * @default 'year'\n   */\n  maxGranularity?: 'year' | 'month' | Granularity,\n  /** The locale to display and edit the value according to. */\n  locale: string,\n  /**\n   * A function that creates a [Calendar](../internationalized/date/Calendar.html)\n   * object for a given calendar identifier. Such a function may be imported from the\n   * `@internationalized/date` package, or manually implemented to include support for\n   * only certain calendars.\n   */\n  createCalendar: (name: string) => Calendar\n}\n\n/**\n * Provides state management for a date field component.\n * A date field allows users to enter and edit date and time values using a keyboard.\n * Each part of a date value is displayed in an individually editable segment.\n */\nexport function useDateFieldState(props: DateFieldStateOptions): DateFieldState {\n  let {\n    locale,\n    createCalendar,\n    hideTimeZone,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  } = props;\n\n  let v: DateValue = (props.value || props.defaultValue || props.placeholderValue);\n  let [granularity, defaultTimeZone] = useDefaultProps(v, props.granularity);\n  let timeZone = defaultTimeZone || 'UTC';\n\n  // props.granularity must actually exist in the value if one is provided.\n  if (v && !(granularity in v)) {\n    throw new Error('Invalid granularity ' + granularity + ' for value ' + v.toString());\n  }\n\n  let defaultFormatter = useMemo(() => new DateFormatter(locale), [locale]);\n  let calendar = useMemo(() => createCalendar(defaultFormatter.resolvedOptions().calendar), [createCalendar, defaultFormatter]);\n\n  let [value, setDate] = useControlledState<DateValue>(\n    props.value,\n    props.defaultValue,\n    props.onChange\n  );\n\n  let calendarValue = useMemo(() => convertValue(value, calendar), [value, calendar]);\n\n  // We keep track of the placeholder date separately in state so that onChange is not called\n  // until all segments are set. If the value === null (not undefined), then assume the component\n  // is controlled, so use the placeholder as the value until all segments are entered so it doesn't\n  // change from uncontrolled to controlled and emit a warning.\n  let [placeholderDate, setPlaceholderDate] = useState(\n    () => createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone)\n  );\n\n  let val = calendarValue || placeholderDate;\n  let showEra = calendar.identifier === 'gregory' && val.era === 'BC';\n  let formatOpts = useMemo(() => ({\n    granularity,\n    maxGranularity: props.maxGranularity ?? 'year',\n    timeZone: defaultTimeZone,\n    hideTimeZone,\n    hourCycle: props.hourCycle,\n    showEra\n  }), [props.maxGranularity, granularity, props.hourCycle, defaultTimeZone, hideTimeZone, showEra]);\n  let opts = useMemo(() => getFormatOptions({}, formatOpts), [formatOpts]);\n\n  let dateFormatter = useMemo(() => new DateFormatter(locale, opts), [locale, opts]);\n  let resolvedOptions = useMemo(() => dateFormatter.resolvedOptions(), [dateFormatter]);\n\n  // Determine how many editable segments there are for validation purposes.\n  // The result is cached for performance.\n  let allSegments: Partial<typeof EDITABLE_SEGMENTS> = useMemo(() =>\n    dateFormatter.formatToParts(new Date())\n      .filter(seg => EDITABLE_SEGMENTS[seg.type])\n      .reduce((p, seg) => (p[seg.type] = true, p), {})\n  , [dateFormatter]);\n\n  let [validSegments, setValidSegments] = useState<Partial<typeof EDITABLE_SEGMENTS>>(\n    () => props.value || props.defaultValue ? {...allSegments} : {}\n  );\n\n  // Reset placeholder when calendar changes\n  let lastCalendarIdentifier = useRef(calendar.identifier);\n  useEffect(() => {\n    if (calendar.identifier !== lastCalendarIdentifier.current) {\n      lastCalendarIdentifier.current = calendar.identifier;\n      setPlaceholderDate(placeholder =>\n        Object.keys(validSegments).length > 0\n          ? toCalendar(placeholder, calendar)\n          : createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone)\n      );\n    }\n  }, [calendar, granularity, validSegments, defaultTimeZone, props.placeholderValue]);\n\n  // If there is a value prop, and some segments were previously placeholders, mark them all as valid.\n  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {\n    validSegments = {...allSegments};\n    setValidSegments(validSegments);\n  }\n\n  // If the value is set to null and all segments are valid, reset the placeholder.\n  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {\n    validSegments = {};\n    setValidSegments(validSegments);\n    setPlaceholderDate(createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone));\n  }\n\n  // If all segments are valid, use the date from state, otherwise use the placeholder date.\n  let displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;\n  let setValue = (newValue: DateValue) => {\n    if (props.isDisabled || props.isReadOnly) {\n      return;\n    }\n\n    if (Object.keys(validSegments).length >= Object.keys(allSegments).length) {\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      newValue = toCalendar(newValue, v?.calendar || new GregorianCalendar());\n      setDate(newValue);\n    } else {\n      setPlaceholderDate(newValue);\n    }\n  };\n\n  let dateValue = useMemo(() => displayValue.toDate(timeZone), [displayValue, timeZone]);\n  let segments = useMemo(() =>\n    dateFormatter.formatToParts(dateValue)\n      .map(segment => {\n        let isEditable = EDITABLE_SEGMENTS[segment.type];\n        if (segment.type === 'era' && calendar.getEras().length === 1) {\n          isEditable = false;\n        }\n\n        let isPlaceholder = EDITABLE_SEGMENTS[segment.type] && !validSegments[segment.type];\n        let placeholder = EDITABLE_SEGMENTS[segment.type] ? getPlaceholder(segment.type, segment.value, locale) : null;\n        return {\n          type: TYPE_MAPPING[segment.type] || segment.type,\n          text: isPlaceholder ? placeholder : segment.value,\n          ...getSegmentLimits(displayValue, segment.type, resolvedOptions),\n          isPlaceholder,\n          placeholder,\n          isEditable\n        } as DateSegment;\n      })\n  , [dateValue, validSegments, dateFormatter, resolvedOptions, displayValue, calendar, locale]);\n\n  // When the era field appears, mark it valid if the year field is already valid.\n  // If the era field disappears, remove it from the valid segments.\n  if (allSegments.era && validSegments.year && !validSegments.era) {\n    validSegments.era = true;\n    setValidSegments({...validSegments});\n  } else if (!allSegments.era && validSegments.era) {\n    delete validSegments.era;\n    setValidSegments({...validSegments});\n  }\n\n  let markValid = (part: Intl.DateTimeFormatPartTypes) => {\n    validSegments[part] = true;\n    if (part === 'year' && allSegments.era) {\n      validSegments.era = true;\n    }\n    setValidSegments({...validSegments});\n  };\n\n  let adjustSegment = (type: Intl.DateTimeFormatPartTypes, amount: number) => {\n    if (!validSegments[type]) {\n      markValid(type);\n      if (Object.keys(validSegments).length >= Object.keys(allSegments).length) {\n        setValue(displayValue);\n      }\n    } else {\n      setValue(addSegment(displayValue, type, amount, resolvedOptions));\n    }\n  };\n\n  let validationState: ValidationState = props.validationState ||\n    (isInvalid(calendarValue, props.minValue, props.maxValue) ? 'invalid' : null);\n\n  return {\n    value: calendarValue,\n    dateValue,\n    calendar,\n    setValue,\n    segments,\n    dateFormatter,\n    validationState,\n    granularity,\n    maxGranularity: props.maxGranularity ?? 'year',\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    increment(part) {\n      adjustSegment(part, 1);\n    },\n    decrement(part) {\n      adjustSegment(part, -1);\n    },\n    incrementPage(part) {\n      adjustSegment(part, PAGE_STEP[part] || 1);\n    },\n    decrementPage(part) {\n      adjustSegment(part, -(PAGE_STEP[part] || 1));\n    },\n    setSegment(part, v) {\n      markValid(part);\n      setValue(setSegment(displayValue, part, v, resolvedOptions));\n    },\n    confirmPlaceholder() {\n      if (props.isDisabled || props.isReadOnly) {\n        return;\n      }\n\n      // Confirm the placeholder if only the day period is not filled in.\n      let validKeys = Object.keys(validSegments);\n      let allKeys = Object.keys(allSegments);\n      if (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) {\n        validSegments = {...allSegments};\n        setValidSegments(validSegments);\n        setValue(displayValue.copy());\n      }\n    },\n    clearSegment(part) {\n      delete validSegments[part];\n      setValidSegments({...validSegments});\n\n      let placeholder = createPlaceholderDate(props.placeholderValue, granularity, calendar, defaultTimeZone);\n      let value = displayValue;\n\n      // Reset day period to default without changing the hour.\n      if (part === 'dayPeriod' && 'hour' in displayValue && 'hour' in placeholder) {\n        let isPM = displayValue.hour >= 12;\n        let shouldBePM = placeholder.hour >= 12;\n        if (isPM && !shouldBePM) {\n          value = displayValue.set({hour: displayValue.hour - 12});\n        } else if (!isPM && shouldBePM) {\n          value = displayValue.set({hour: displayValue.hour + 12});\n        }\n      } else if (part in displayValue) {\n        value = displayValue.set({[part]: placeholder[part]});\n      }\n\n      setDate(null);\n      setValue(value);\n    },\n    formatValue(fieldOptions: FieldOptions) {\n      if (!calendarValue) {\n        return '';\n      }\n\n      let formatOptions = getFormatOptions(fieldOptions, formatOpts);\n      let formatter = new DateFormatter(locale, formatOptions);\n      return formatter.format(dateValue);\n    }\n  };\n}\n\nfunction getSegmentLimits(date: DateValue, type: string, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (type) {\n    case 'era': {\n      let eras = date.calendar.getEras();\n      return {\n        value: eras.indexOf(date.era),\n        minValue: 0,\n        maxValue: eras.length - 1\n      };\n    }\n    case 'year':\n      return {\n        value: date.year,\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date)\n      };\n    case 'month':\n      return {\n        value: date.month,\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date)\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date)\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12\n        };\n      case 'hour':\n        if (options.hour12) {\n          let isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59\n        };\n      case 'second':\n        return {\n          value: date.second,\n          minValue: 0,\n          maxValue: 59\n        };\n    }\n  }\n\n  return {};\n}\n\nfunction addSegment(value: DateValue, part: string, amount: number, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        let hours = value.hour;\n        let isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24\n        });\n    }\n  }\n}\n\nfunction setSegment(value: DateValue, part: string, segmentValue: number, options: Intl.ResolvedDateTimeFormatOptions) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n    case 'era':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        let hours = value.hour;\n        let wasPM = hours >= 12;\n        let isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          let hours = value.hour;\n          let wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n        // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedStringDictionary} from '@internationalized/string';\n\n// These placeholders are based on the strings used by the <input type=\"date\">\n// implementations in Chrome and Firefox. Additional languages are supported\n// here than React Spectrum's typical translations.\nconst placeholders = new LocalizedStringDictionary({\n  ach: {year: 'mwaka', month: 'dwe', day: 'nino'},\n  af: {year: 'jjjj', month: 'mm', day: 'dd'},\n  am: {year: 'ዓዓዓዓ', month: 'ሚሜ', day: 'ቀቀ'},\n  an: {year: 'aaaa', month: 'mm', day: 'dd'},\n  ar: {year: 'سنة', month: 'شهر', day: 'يوم'},\n  ast: {year: 'aaaa', month: 'mm', day: 'dd'},\n  az: {year: 'iiii', month: 'aa', day: 'gg'},\n  be: {year: 'гггг', month: 'мм', day: 'дд'},\n  bg: {year: 'гггг', month: 'мм', day: 'дд'},\n  bn: {year: 'yyyy', month: 'মিমি', day: 'dd'},\n  br: {year: 'bbbb', month: 'mm', day: 'dd'},\n  bs: {year: 'gggg', month: 'mm', day: 'dd'},\n  ca: {year: 'aaaa', month: 'mm', day: 'dd'},\n  cak: {year: 'jjjj', month: 'ii', day: \"q'q'\"},\n  ckb: {year: 'ساڵ', month: 'مانگ', day: 'ڕۆژ'},\n  cs: {year: 'rrrr', month: 'mm', day: 'dd'},\n  cy: {year: 'bbbb', month: 'mm', day: 'dd'},\n  da: {year: 'åååå', month: 'mm', day: 'dd'},\n  de: {year: 'jjjj', month: 'mm', day: 'tt'},\n  dsb: {year: 'llll', month: 'mm', day: 'źź'},\n  el: {year: 'εεεε', month: 'μμ', day: 'ηη'},\n  en: {year: 'yyyy', month: 'mm', day: 'dd'},\n  eo: {year: 'jjjj', month: 'mm', day: 'tt'},\n  es: {year: 'aaaa', month: 'mm', day: 'dd'},\n  et: {year: 'aaaa', month: 'kk', day: 'pp'},\n  eu: {year: 'uuuu', month: 'hh', day: 'ee'},\n  fa: {year: 'سال', month: 'ماه', day: 'روز'},\n  ff: {year: 'hhhh', month: 'll', day: 'ññ'},\n  fi: {year: 'vvvv', month: 'kk', day: 'pp'},\n  fr: {year: 'aaaa', month: 'mm', day: 'jj'},\n  fy: {year: 'jjjj', month: 'mm', day: 'dd'},\n  ga: {year: 'bbbb', month: 'mm', day: 'll'},\n  gd: {year: 'bbbb', month: 'mm', day: 'll'},\n  gl: {year: 'aaaa', month: 'mm', day: 'dd'},\n  he: {year: 'שנה', month: 'חודש', day: 'יום'},\n  hr: {year: 'gggg', month: 'mm', day: 'dd'},\n  hsb: {year: 'llll', month: 'mm', day: 'dd'},\n  hu: {year: 'éééé', month: 'hh', day: 'nn'},\n  ia: {year: 'aaaa', month: 'mm', day: 'dd'},\n  id: {year: 'tttt', month: 'bb', day: 'hh'},\n  it: {year: 'aaaa', month: 'mm', day: 'gg'},\n  ja: {year: ' 年 ', month: '月', day: '日'},\n  ka: {year: 'წწწწ', month: 'თთ', day: 'რრ'},\n  kk: {year: 'жжжж', month: 'аа', day: 'кк'},\n  kn: {year: 'ವವವವ', month: 'ಮಿಮೀ', day: 'ದಿದಿ'},\n  ko: {year: '연도', month: '월', day: '일'},\n  lb: {year: 'jjjj', month: 'mm', day: 'dd'},\n  lo: {year: 'ປປປປ', month: 'ດດ', day: 'ວວ'},\n  lt: {year: 'mmmm', month: 'mm', day: 'dd'},\n  lv: {year: 'gggg', month: 'mm', day: 'dd'},\n  meh: {year: 'aaaa', month: 'mm', day: 'dd'},\n  ml: {year: 'വർഷം', month: 'മാസം', day: 'തീയതി'},\n  ms: {year: 'tttt', month: 'mm', day: 'hh'},\n  nl: {year: 'jjjj', month: 'mm', day: 'dd'},\n  nn: {year: 'åååå', month: 'mm', day: 'dd'},\n  no: {year: 'åååå', month: 'mm', day: 'dd'},\n  oc: {year: 'aaaa', month: 'mm', day: 'jj'},\n  pl: {year: 'rrrr', month: 'mm', day: 'dd'},\n  pt: {year: 'aaaa', month: 'mm', day: 'dd'},\n  rm: {year: 'oooo', month: 'mm', day: 'dd'},\n  ro: {year: 'aaaa', month: 'll', day: 'zz'},\n  ru: {year: 'гггг', month: 'мм', day: 'дд'},\n  sc: {year: 'aaaa', month: 'mm', day: 'dd'},\n  scn: {year: 'aaaa', month: 'mm', day: 'jj'},\n  sk: {year: 'rrrr', month: 'mm', day: 'dd'},\n  sl: {year: 'llll', month: 'mm', day: 'dd'},\n  sr: {year: 'гггг', month: 'мм', day: 'дд'},\n  sv: {year: 'åååå', month: 'mm', day: 'dd'},\n  szl: {year: 'rrrr', month: 'mm', day: 'dd'},\n  tg: {year: 'сссс', month: 'мм', day: 'рр'},\n  th: {year: 'ปปปป', month: 'ดด', day: 'วว'},\n  tr: {year: 'yyyy', month: 'aa', day: 'gg'},\n  uk: {year: 'рррр', month: 'мм', day: 'дд'},\n  'zh-CN': {year: '年', month: '月', day: '日'},\n  'zh-TW': {year: '年', month: '月', day: '日'}\n}, 'en');\n\nexport function getPlaceholder(field: string, value: string, locale: string) {\n  // Use the actual placeholder value for the era and day period fields.\n  if (field === 'era' || field === 'dayPeriod') {\n    return value;\n  }\n\n  if (field === 'year' || field === 'month' || field === 'day') {\n    return placeholders.getStringForLocale(field, locale);\n  }\n\n  // For time fields (e.g. hour, minute, etc.), use two dashes as the placeholder.\n  return '––';\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter, toCalendarDate, toCalendarDateTime} from '@internationalized/date';\nimport {DateRange, DateRangePickerProps, DateValue, Granularity, TimeValue} from '@react-types/datepicker';\nimport {FieldOptions, getFormatOptions, getPlaceholderTime, isInvalid, useDefaultProps} from './utils';\nimport {RangeValue, ValidationState} from '@react-types/shared';\nimport {useControlledState} from '@react-stately/utils';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface DateRangePickerStateOptions extends DateRangePickerProps<DateValue> {\n  /**\n   * Determines whether the date picker popover should close automatically when a date is selected.\n   * @default true\n   */\n  shouldCloseOnSelect?: boolean | (() => boolean)\n}\n\ntype TimeRange = RangeValue<TimeValue>;\nexport interface DateRangePickerState {\n  /** The currently selected date range. */\n  value: DateRange,\n  /** Sets the selected date range. */\n  setValue(value: DateRange): void,\n  /**\n   * The date portion of the selected range. This may be set prior to `value` if the user has\n   * selected a date range but has not yet selected a time range.\n   */\n  dateRange: DateRange,\n  /** Sets the date portion of the selected range. */\n  setDateRange(value: DateRange): void,\n  /**\n   * The time portion of the selected range. This may be set prior to `value` if the user has\n   * selected a time range but has not yet selected a date range.\n   */\n  timeRange: TimeRange,\n  /** Sets the time portion of the selected range. */\n  setTimeRange(value: TimeRange): void,\n  /** Sets the date portion of either the start or end of the selected range. */\n  setDate(part: 'start' | 'end', value: DateValue): void,\n  /** Sets the time portion of either the start or end of the selected range. */\n  setTime(part: 'start' | 'end', value: TimeValue): void,\n  /** Sets the date and time of either the start or end of the selected range. */\n  setDateTime(part: 'start' | 'end', value: DateValue): void,\n  /** The granularity for the field, based on the `granularity` prop and current value. */\n  granularity: Granularity,\n  /** Whether the date range picker supports selecting times, according to the `granularity` prop and current value. */\n  hasTime: boolean,\n  /** Whether the calendar popover is currently open. */\n  isOpen: boolean,\n  /** Sets whether the calendar popover is open. */\n  setOpen(isOpen: boolean): void,\n  /** The current validation state of the date picker, based on the `validationState`, `minValue`, and `maxValue` props. */\n  validationState: ValidationState,\n  /** Formats the selected range using the given options. */\n  formatValue(locale: string, fieldOptions: FieldOptions): {start: string, end: string}\n}\n\n/**\n * Provides state management for a date range picker component.\n * A date range picker combines two DateFields and a RangeCalendar popover to allow\n * users to enter or select a date and time range.\n */\nexport function useDateRangePickerState(props: DateRangePickerStateOptions): DateRangePickerState {\n  let overlayState = useOverlayTriggerState(props);\n  let [controlledValue, setControlledValue] = useControlledState<DateRange>(props.value, props.defaultValue || null, props.onChange);\n  let [placeholderValue, setPlaceholderValue] = useState(() => controlledValue || {start: null, end: null});\n\n  // Reset the placeholder if the value prop is set to null.\n  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {\n    placeholderValue = {start: null, end: null};\n    setPlaceholderValue(placeholderValue);\n  }\n\n  let value = controlledValue || placeholderValue;\n\n  let setValue = (value: DateRange) => {\n    setPlaceholderValue(value);\n    if (value?.start && value.end) {\n      setControlledValue(value);\n    } else {\n      setControlledValue(null);\n    }\n  };\n\n  let v = (value?.start || value?.end || props.placeholderValue);\n  let [granularity] = useDefaultProps(v, props.granularity);\n  let hasTime = granularity === 'hour' || granularity === 'minute' || granularity === 'second' || granularity === 'millisecond';\n  let shouldCloseOnSelect = props.shouldCloseOnSelect ?? true;\n\n  let [dateRange, setSelectedDateRange] = useState<DateRange>(null);\n  let [timeRange, setSelectedTimeRange] = useState<TimeRange>(null);\n\n  if (value && value.start && value.end) {\n    dateRange = value;\n    if ('hour' in value.start) {\n      timeRange = value as TimeRange;\n    }\n  }\n\n  let commitValue = (dateRange: DateRange, timeRange: TimeRange) => {\n    setValue({\n      start: 'timeZone' in timeRange.start ? timeRange.start.set(toCalendarDate(dateRange.start)) : toCalendarDateTime(dateRange.start, timeRange.start),\n      end: 'timeZone' in timeRange.end ? timeRange.end.set(toCalendarDate(dateRange.end)) : toCalendarDateTime(dateRange.end, timeRange.end)\n    });\n  };\n\n  // Intercept setValue to make sure the Time section is not changed by date selection in Calendar\n  let setDateRange = (range: DateRange) => {\n    let shouldClose = typeof shouldCloseOnSelect === 'function' ? shouldCloseOnSelect() : shouldCloseOnSelect;\n    if (hasTime) {\n      if (shouldClose || (range.start && range.end && timeRange?.start && timeRange?.end)) {\n        commitValue(range, {\n          start: timeRange?.start || getPlaceholderTime(props.placeholderValue),\n          end: timeRange?.end || getPlaceholderTime(props.placeholderValue)\n        });\n      } else {\n        setSelectedDateRange(range);\n      }\n    } else if (range.start && range.end) {\n      setValue(range);\n    } else {\n      setSelectedDateRange(range);\n    }\n\n    if (shouldClose) {\n      overlayState.setOpen(false);\n    }\n  };\n\n  let setTimeRange = (range: TimeRange) => {\n    if (dateRange?.start && dateRange?.end && range.start && range.end) {\n      commitValue(dateRange, range);\n    } else {\n      setSelectedTimeRange(range);\n    }\n  };\n\n  let validationState: ValidationState = props.validationState\n    || (value != null && (\n      isInvalid(value.start, props.minValue, props.maxValue) ||\n      isInvalid(value.end, props.minValue, props.maxValue) ||\n      (value.end != null && value.start != null && value.end.compare(value.start) < 0) ||\n      (value?.start && props.isDateUnavailable?.(value.start)) ||\n      (value?.end && props.isDateUnavailable?.(value.end))\n    ) ? 'invalid' : null);\n\n  return {\n    value,\n    setValue,\n    dateRange,\n    timeRange,\n    granularity,\n    hasTime,\n    setDate(part, date) {\n      setDateRange({...dateRange, [part]: date});\n    },\n    setTime(part, time) {\n      setTimeRange({...timeRange, [part]: time});\n    },\n    setDateTime(part, dateTime) {\n      setValue({...value, [part]: dateTime});\n    },\n    setDateRange,\n    setTimeRange,\n    isOpen: overlayState.isOpen,\n    setOpen(isOpen) {\n      // Commit the selected date range when the calendar is closed. Use a placeholder time if one wasn't set.\n      // If only the time range was set and not the date range, don't commit. The state will be preserved until\n      // the user opens the popover again.\n      if (!isOpen && !(value?.start && value?.end) && dateRange?.start && dateRange?.end && hasTime) {\n        commitValue(dateRange, {\n          start: timeRange?.start || getPlaceholderTime(props.placeholderValue),\n          end: timeRange?.end || getPlaceholderTime(props.placeholderValue)\n        });\n      }\n\n      overlayState.setOpen(isOpen);\n    },\n    validationState,\n    formatValue(locale, fieldOptions) {\n      if (!value || !value.start || !value.end) {\n        return null;\n      }\n\n      let startTimeZone = 'timeZone' in value.start ? value.start.timeZone : undefined;\n      let startGranularity = props.granularity || (value.start && 'minute' in value.start ? 'minute' : 'day');\n      let endTimeZone = 'timeZone' in value.end ? value.end.timeZone : undefined;\n      let endGranularity = props.granularity || (value.end && 'minute' in value.end ? 'minute' : 'day');\n\n      let startOptions = getFormatOptions(fieldOptions, {\n        granularity: startGranularity,\n        timeZone: startTimeZone,\n        hideTimeZone: props.hideTimeZone,\n        hourCycle: props.hourCycle,\n        showEra: (value.start.calendar.identifier === 'gregory' && value.start.era === 'BC') ||\n          (value.end.calendar.identifier === 'gregory' && value.end.era === 'BC')\n      });\n\n      let startDate = value.start.toDate(startTimeZone || 'UTC');\n      let endDate = value.end.toDate(endTimeZone || 'UTC');\n\n      let startFormatter = new DateFormatter(locale, startOptions);\n      let endFormatter: Intl.DateTimeFormat;\n      if (startTimeZone === endTimeZone && startGranularity === endGranularity && value.start.compare(value.end) !== 0) {\n        // Use formatRange, as it results in shorter output when some of the fields\n        // are shared between the start and end dates (e.g. the same month).\n        // Formatting will fail if the end date is before the start date. Fall back below when that happens.\n        try {\n          let parts = startFormatter.formatRangeToParts(startDate, endDate);\n\n          // Find the separator between the start and end date. This is determined\n          // by finding the last shared literal before the end range.\n          let separatorIndex = -1;\n          for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            if (part.source === 'shared' && part.type === 'literal') {\n              separatorIndex = i;\n            } else if (part.source === 'endRange') {\n              break;\n            }\n          }\n\n          // Now we can combine the parts into start and end strings.\n          let start = '';\n          let end = '';\n          for (let i = 0; i < parts.length; i++) {\n            if (i < separatorIndex) {\n              start += parts[i].value;\n            } else if (i > separatorIndex) {\n              end += parts[i].value;\n            }\n          }\n\n          return {start, end};\n        } catch (e) {\n          // ignore\n        }\n\n        endFormatter = startFormatter;\n      } else {\n        let endOptions = getFormatOptions(fieldOptions, {\n          granularity: endGranularity,\n          timeZone: endTimeZone,\n          hideTimeZone: props.hideTimeZone,\n          hourCycle: props.hourCycle\n        });\n\n        endFormatter = new DateFormatter(locale, endOptions);\n      }\n\n      return {\n        start: startFormatter.format(startDate),\n        end: endFormatter.format(endDate)\n      };\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFieldState, useDateFieldState} from '.';\nimport {DateValue, TimePickerProps, TimeValue} from '@react-types/datepicker';\nimport {getLocalTimeZone, GregorianCalendar, Time, toCalendarDateTime, today, toTime} from '@internationalized/date';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo} from 'react';\n\nexport interface TimeFieldStateOptions extends TimePickerProps<TimeValue> {\n  /** The locale to display and edit the value according to. */\n  locale: string\n}\n\n/**\n * Provides state management for a time field component.\n * A time field allows users to enter and edit time values using a keyboard.\n * Each part of a time value is displayed in an individually editable segment.\n */\nexport function useTimeFieldState(props: TimeFieldStateOptions): DateFieldState {\n  let {\n    placeholderValue = new Time(),\n    minValue,\n    maxValue,\n    granularity\n  } = props;\n\n  let [value, setValue] = useControlledState<TimeValue>(\n    props.value,\n    props.defaultValue,\n    props.onChange\n  );\n\n  let v = value || placeholderValue;\n  let day = v && 'day' in v ? v : undefined;\n  let placeholderDate = useMemo(() => convertValue(placeholderValue), [placeholderValue]);\n  let minDate = useMemo(() => convertValue(minValue, day), [minValue, day]);\n  let maxDate = useMemo(() => convertValue(maxValue, day), [maxValue, day]);\n\n  let dateTime = useMemo(() => value == null ? null : convertValue(value), [value]);\n  let onChange = newValue => {\n    setValue(v && 'day' in v ? newValue : newValue && toTime(newValue));\n  };\n\n  return useDateFieldState({\n    ...props,\n    value: dateTime,\n    defaultValue: undefined,\n    minValue: minDate,\n    maxValue: maxDate,\n    onChange,\n    granularity: granularity || 'minute',\n    maxGranularity: 'hour',\n    placeholderValue: placeholderDate,\n    // Calendar should not matter for time fields.\n    createCalendar: () => new GregorianCalendar()\n  });\n}\n\nfunction convertValue(value: TimeValue, date: DateValue = today(getLocalTimeZone())) {\n  if (!value) {\n    return null;\n  }\n\n  if ('day' in value) {\n    return value;\n  }\n\n  return toCalendarDateTime(date, value);\n}\n"],"names":[],"version":3,"file":"main.js.map"}