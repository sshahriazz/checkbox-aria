{"ast":null,"code":"import _objectSpread from \"C:/vs-studio/technext-practice/checkbox-aria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\vs-studio\\\\technext-practice\\\\checkbox-aria\\\\src\\\\Checkbox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { useCheckbox } from \"@react-aria/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport classNames from \"clsx\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Checkbox(props) {\n  _s();\n\n  var state = useToggleState(props);\n  var ref = useRef(null);\n\n  var _useCheckbox = useCheckbox(props, state, ref),\n      inputProps = _useCheckbox.inputProps;\n\n  var _useFocusRing = useFocusRing(),\n      focusProps = _useFocusRing.focusProps,\n      isFocusVisible = _useFocusRing.isFocusVisible;\n\n  var checkboxClassName = classNames(state.isSelected ? \"bgIndigo group-active:bg-indigo-600\" : \"isSelected\", props.isDisabled ? \"borderGrayThree\" : isFocusVisible || state.isSelected ? \"bgIndigo group-active:border-indigo-600\" : \"borderGrayFive group-active:border-gray-600\", \"isVisible\", isFocusVisible ? \"shadowOutline\" : \"\", \"transitionVisible\");\n  var labelClassName = classNames(props.isDisabled ? \"textColor\" : \"textColorGray group-active:text-gray-800\", \"userSelect\");\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    className: \"group\",\n    children: [/*#__PURE__*/_jsxDEV(VisuallyHidden, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, mergeProps(inputProps, focusProps)), {}, {\n        ref: ref\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: checkboxClassName,\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          stroke: \"currentColor\",\n          width: \"0.75rem\",\n          height: \"0.75rem\"\n        },\n        viewBox: \"0 0 18 18\",\n        children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"1 9 7 14 15 4\",\n          fill: \"none\",\n          strokeWidth: 3,\n          strokeDasharray: 22,\n          strokeDashoffset: state.isSelected ? 44 : 66,\n          style: {\n            transition: \"all 400ms\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: labelClassName,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkbox, \"dUDYsWF4pJvJ8WVA9zT/8eMsULg=\", false, function () {\n  return [useToggleState, useCheckbox, useFocusRing];\n});\n\n_c = Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useRef","useToggleState","useCheckbox","VisuallyHidden","useFocusRing","mergeProps","classNames","Checkbox","props","state","ref","inputProps","focusProps","isFocusVisible","checkboxClassName","isSelected","isDisabled","labelClassName","display","alignItems","stroke","width","height","transition","children"],"sources":["C:/vs-studio/technext-practice/checkbox-aria/src/Checkbox.tsx"],"sourcesContent":["import type { AriaCheckboxProps } from \"@react-types/checkbox\";\r\nimport React, { useRef } from \"react\";\r\nimport { useToggleState } from \"@react-stately/toggle\";\r\nimport { useCheckbox } from \"@react-aria/checkbox\";\r\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\r\nimport { useFocusRing } from \"@react-aria/focus\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nimport classNames from \"clsx\";\r\nimport \"./styles.css\"\r\n\r\nexport function Checkbox(props: AriaCheckboxProps) {\r\n  let state = useToggleState(props);\r\n  let ref = useRef<HTMLInputElement>(null);\r\n  let { inputProps } = useCheckbox(props, state, ref);\r\n  let { focusProps, isFocusVisible } = useFocusRing();\r\n\r\n  let checkboxClassName = classNames(\r\n    state.isSelected ? \"bgIndigo group-active:bg-indigo-600\" : \"isSelected\",\r\n    props.isDisabled\r\n      ? \"borderGrayThree\"\r\n      : isFocusVisible || state.isSelected\r\n      ? \"bgIndigo group-active:border-indigo-600\"\r\n      : \"borderGrayFive group-active:border-gray-600\",\r\n    \"isVisible\",\r\n    isFocusVisible ? \"shadowOutline\" : \"\",\r\n    \"transitionVisible\"\r\n  );\r\n\r\n  let labelClassName = classNames(\r\n    props.isDisabled\r\n      ? \"textColor\"\r\n      : \"textColorGray group-active:text-gray-800\",\r\n    \"userSelect\"\r\n  );\r\n\r\n  return (\r\n    <label  style={{ display: \"flex\", alignItems: \"center\" }} className=\"group\">\r\n      <VisuallyHidden>\r\n        <input {...mergeProps(inputProps, focusProps)} ref={ref} />\r\n      </VisuallyHidden>\r\n      <div className={checkboxClassName} aria-hidden=\"true\">\r\n        <svg style={{\r\n            stroke: \"currentColor\",\r\n            width: \"0.75rem\",\r\n            height: \"0.75rem\"\r\n          }} viewBox=\"0 0 18 18\">\r\n          <polyline\r\n            points=\"1 9 7 14 15 4\"\r\n            fill=\"none\"\r\n            strokeWidth={3}\r\n            strokeDasharray={22}\r\n            strokeDashoffset={state.isSelected ? 44 : 66}\r\n            style={{\r\n              transition: \"all 400ms\"\r\n            }}\r\n          />\r\n        </svg>\r\n      </div>\r\n      <span className={labelClassName}>{props.children}</span>\r\n    </label>\r\n  );\r\n}\r\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,MAAvB;AACA,OAAO,cAAP;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAA4C;EAAA;;EACjD,IAAIC,KAAK,GAAGR,cAAc,CAACO,KAAD,CAA1B;EACA,IAAIE,GAAG,GAAGV,MAAM,CAAmB,IAAnB,CAAhB;;EACA,mBAAqBE,WAAW,CAACM,KAAD,EAAQC,KAAR,EAAeC,GAAf,CAAhC;EAAA,IAAMC,UAAN,gBAAMA,UAAN;;EACA,oBAAqCP,YAAY,EAAjD;EAAA,IAAMQ,UAAN,iBAAMA,UAAN;EAAA,IAAkBC,cAAlB,iBAAkBA,cAAlB;;EAEA,IAAIC,iBAAiB,GAAGR,UAAU,CAChCG,KAAK,CAACM,UAAN,GAAmB,qCAAnB,GAA2D,YAD3B,EAEhCP,KAAK,CAACQ,UAAN,GACI,iBADJ,GAEIH,cAAc,IAAIJ,KAAK,CAACM,UAAxB,GACA,yCADA,GAEA,6CAN4B,EAOhC,WAPgC,EAQhCF,cAAc,GAAG,eAAH,GAAqB,EARH,EAShC,mBATgC,CAAlC;EAYA,IAAII,cAAc,GAAGX,UAAU,CAC7BE,KAAK,CAACQ,UAAN,GACI,WADJ,GAEI,0CAHyB,EAI7B,YAJ6B,CAA/B;EAOA,oBACE;IAAQ,KAAK,EAAE;MAAEE,OAAO,EAAE,MAAX;MAAmBC,UAAU,EAAE;IAA/B,CAAf;IAA0D,SAAS,EAAC,OAApE;IAAA,wBACE,QAAC,cAAD;MAAA,uBACE,iDAAWd,UAAU,CAACM,UAAD,EAAaC,UAAb,CAArB;QAA+C,GAAG,EAAEF;MAApD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAEI,iBAAhB;MAAmC,eAAY,MAA/C;MAAA,uBACE;QAAK,KAAK,EAAE;UACRM,MAAM,EAAE,cADA;UAERC,KAAK,EAAE,SAFC;UAGRC,MAAM,EAAE;QAHA,CAAZ;QAIK,OAAO,EAAC,WAJb;QAAA,uBAKE;UACE,MAAM,EAAC,eADT;UAEE,IAAI,EAAC,MAFP;UAGE,WAAW,EAAE,CAHf;UAIE,eAAe,EAAE,EAJnB;UAKE,gBAAgB,EAAEb,KAAK,CAACM,UAAN,GAAmB,EAAnB,GAAwB,EAL5C;UAME,KAAK,EAAE;YACLQ,UAAU,EAAE;UADP;QANT;UAAA;UAAA;UAAA;QAAA;MALF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAsBE;MAAM,SAAS,EAAEN,cAAjB;MAAA,UAAkCT,KAAK,CAACgB;IAAxC;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GAnDejB,Q;UACFN,c,EAESC,W,EACgBE,Y;;;KAJvBG,Q"},"metadata":{},"sourceType":"module"}